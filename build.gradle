/*
 * The following is included to use Spring Boot
 */
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

/* Packaged as a Spring Boot or WAR application */
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

/* Project Information */
def projectName = 'Bridgephase MVC Starter'
def deployableName = 'BridgePhaseMVC'
def projectVersion = '1.0'

/* This requires Java 7 */
sourceCompatibility = 1.7
targetCompatibility = 1.7

/* JAR Manifest Definition */
jar {
  baseName = deployableName
  version = projectVersion
  manifest {
    attributes 'Implementation-Title': projectName,
                'Implementation-Version': projectVersion
  }
}

/* Specify the name of the artifact here */
war {
  archiveName = 'ctf.war'
}

repositories {
  mavenCentral()
}

/* Specifies whether we're running in a CI environment */

String travisCI = "$System.env.CI"

/* List of dependencies */
dependencies {
  // compile dependencies
  if (!"true".equals(travisCI)) {
    compile 'org.webjars:angularjs:1.3.16'				            // AngularJS
    compile 'org.webjars.bower:angular-ui-router:0.2.14'			// Angular ui-router
    compile 'org.webjars:less:2.5.0'                          // LESS compiler
    compile 'org.webjars:datatables:1.10.7'
	compile 'org.aspectj:aspectjweaver:1.6.10'
	
  }
  
  compile 'org.springframework.boot:spring-boot-starter-web:1.2.4.RELEASE'   	// spring boot
  compile 'org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE'                     // Tie in to Thymeleaf
  
  compile 'org.springframework.data:spring-data-jpa:1.8.0.RELEASE'            // Spring data
  compile 'org.hibernate:hibernate-entitymanager:4.3.10.Final'                // Hibernate
  compile 'com.h2database:h2:1.4.187'                                        // In memory database
  
  compile 'org.apache.commons:commons-lang3:3.0'				                     // Apache commons
  
  // so we can turn it into a war
  providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:1.2.4.RELEASE'

  testCompile group: 'junit', name: 'junit', version: '4.+'
  testCompile 'org.mockito:mockito-all:1.10.19'
  
}

task installNpmModules(type: Exec) {
  commandLine 'npm', 'install'
}

task grantBowerPermissions(type: Exec) {
    commandLine 'chmod', '+x', './bower'
}

task installBowerComponents(type: Exec, dependsOn: ["installNpmModules", "grantBowerPermissions"]) {
  commandLine './bower', 'install'
}

task grantGulpPermissions(type: Exec) {
  commandLine 'chmod', '+x', './gulp'
  
}
task buildUiArtifacts(type: Exec, 
  dependsOn: ["installBowerComponents", "grantGulpPermissions"]) {
  commandLine './gulp', 'default'
}

task cleanupNodeModules(type: Exec) {
  commandLine 'rm', '-rf', 'node_modules/'
}

task cleanupBowerLibraries(type: Exec) {
  commandLine 'rm', '-rf', 'src/main/resources/public/libraries/'
}

task cleanupArtifacts(type: Exec) {
  commandLine 'rm', '-rf', 'src/main/resources/public/ctf-app.js'
}

task cleanupAllUiGeneratedComponents(dependsOn: ["cleanupArtifacts", "cleanupBowerLibraries", "cleanupNodeModules"])


if ("true".equals(travisCI)) {
  clean.finalizedBy cleanupAllUiGeneratedComponents
  processResources.finalizedBy buildUiArtifacts 
}

/* For AWS deployments, need to copy the appspec file to the libs directory */
task copyAppSpec(type: Copy) {
  from 'appspec.yml'
  into 'build/libs'
}

/* For AWS deployments, need to copy the scripts necessary to the libs directory */
task copyScripts(type: Copy) {
  from 'awsscripts'
  into 'build/libs'
}

task awsRevision(type: Zip) {
  from 'build/libs'  
}

/* The AWS Revision is created by grouping all artifacts from the libs directory 
 * which should now include the appspec file and the scripts necessary for deployment
 */
awsRevision.dependsOn war
awsRevision.dependsOn copyAppSpec
awsRevision.dependsOn copyScripts